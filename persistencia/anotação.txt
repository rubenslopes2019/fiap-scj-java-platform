perguntar o pq usa tal solução. e se está resolvendo o problema.

banco de dados - construido para ter integridade

ansowere - criptografa  o banco dentro do cliente.

twiter e facebook utiliza 3 camadas de cache.

xampp

teste


parametrizar dentro do arquivo concentrado.
mapeamento xml.

3 maneira de manipular dados, via HQL, via API Criteria, via SQL nativo (não usar).


jpa - é uma especificação - diversas bibliotecas

hibernate implementa jpa

excluir classe não mapeadas dentro do persiste.

value=update ->>> criar a tebela ou atualiza a existente.

spring data =

design pattern - padrao
dao - abstrai o acesso a chamada ao bd.

spring initializr - gera o pré projeto seguindo convenções

firehose - twiter - truput aguentar o pico pode chegar em até TERA - 25GB/S

projeto criado em maven, suporta outras linguagens.


@Component - não mantem o objeto, repassa 


infoq.com palestra de arquitetura - twiter


----

cache fica em paralelo

Spring Data
JPA
mysql

redis - facil escalonamento horizontal - incluir mais vm -paralelo - cluster
vertical - aumentar a capacidade de cada vm - memoria/disco

males - otimização precoce.

2 mil servidores- mainframe - 14 m de dolares.

/\ hitrate
\/ missRate
\/ MissPenalt - errou e precisa acessar o bd

twiter - 200 servidores de cache.

depois de 5s a cada segundo aumenta em 10% a desistencia
mobile 5s a cada segundo aumenta em 20% a desistencia


post : http://localhost:8080/spring-app/estoque/produto/  body: {"nome": "iphone"}

keys *
